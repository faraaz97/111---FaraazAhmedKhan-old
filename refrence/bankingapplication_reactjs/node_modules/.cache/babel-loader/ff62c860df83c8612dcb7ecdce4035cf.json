{"ast":null,"code":"var _jsxFileName = \"D:\\\\new26\\\\ReactUI\\\\bankingapplication_reactjs\\\\src\\\\screens\\\\customers\\\\MakeTrans.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { Card } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { CustFundTransfer } from \"../../actions/customerActions/customerAction\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CustomerFundTransfer = props => {\n  _s();\n\n  const cust = JSON.parse(sessionStorage.getItem(\"customer\"));\n  const [senderAccountNo, setSenderAccountNo] = useState(cust.savingsAccount.accountNumber);\n  const [reciverAccountNo, setReciverAccountNo] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const FundTrans = useSelector(store => store.FundTrans);\n  const {\n    loading,\n    error,\n    response\n  } = FundTrans;\n  toast.configure();\n  const dispatch = useDispatch(); // const accno = JSON.parse(cust).savingsAccount.accountNumber;\n\n  const clearForm = () => {\n    setReciverAccountNo(\"\");\n    setAmount(\"\");\n  };\n\n  const onTransfer = () => {\n    dispatch(CustFundTransfer(senderAccountNo, reciverAccountNo, amount));\n  };\n\n  useEffect(() => {\n    if (response === \"Transaction done Successfully\") {\n      // sessionStorage.setItem(\"customer\", JSON.stringify(response));\n      //alert(\"Success: Transaction successful..!!\");\n      toast.success(\"Transaction successful..!!\", {\n        autoClose: 2000\n      });\n      clearForm(); //<Redirect to=\"/custhome\" />;\n    } else if (response != \"Transaction done Successfully\") {\n      //alert(response.error);\n      toast.error(response, {\n        autoClose: 3000\n      });\n    } //else if (error) {\n    //   //alert(error);\n    //   toast.error(\"Transaction Fail\", {\n    //     autoClose: 1500,\n    //   });\n    // }\n\n  }, [loading, error, response]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"text-white\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"border border-white bg-white text-dark\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: \"Fund Transfer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Your Account Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => {\n                setSenderAccountNo(e.target.value);\n              },\n              className: \"form-control\",\n              value: cust.savingsAccount.accountNumber,\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Beneficiary Account Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => {\n                setReciverAccountNo(e.target.value);\n              },\n              className: \"form-control\",\n              value: reciverAccountNo,\n              placeholder: \"0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Amount \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => {\n                setAmount(e.target.value);\n              },\n              className: \"form-control\",\n              value: amount,\n              placeholder: \"0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: onTransfer,\n              className: \"btn btn-success float-right\",\n              children: \"Transfer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CustomerFundTransfer, \"kTx2p71AWEgQKZ2wSMcV2Gp7/aY=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = CustomerFundTransfer;\nexport default CustomerFundTransfer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomerFundTransfer\");","map":{"version":3,"sources":["D:/new26/ReactUI/bankingapplication_reactjs/src/screens/customers/MakeTrans.js"],"names":["useState","useEffect","Container","Card","useDispatch","useSelector","Redirect","CustFundTransfer","toast","CustomerFundTransfer","props","cust","JSON","parse","sessionStorage","getItem","senderAccountNo","setSenderAccountNo","savingsAccount","accountNumber","reciverAccountNo","setReciverAccountNo","amount","setAmount","FundTrans","store","loading","error","response","configure","dispatch","clearForm","onTransfer","success","autoClose","e","target","value"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { Card } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { CustFundTransfer } from \"../../actions/customerActions/customerAction\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst CustomerFundTransfer = (props) => {\n  const cust = JSON.parse(sessionStorage.getItem(\"customer\"));\n  const [senderAccountNo, setSenderAccountNo] = useState(\n    cust.savingsAccount.accountNumber\n  );\n  const [reciverAccountNo, setReciverAccountNo] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n\n  const FundTrans = useSelector((store) => store.FundTrans);\n  const { loading, error, response } = FundTrans;\n  toast.configure();\n\n  const dispatch = useDispatch();\n\n  // const accno = JSON.parse(cust).savingsAccount.accountNumber;\n\n  const clearForm = () => {\n    setReciverAccountNo(\"\");\n    setAmount(\"\");\n  };\n\n  const onTransfer = () => {\n    dispatch(CustFundTransfer(senderAccountNo, reciverAccountNo, amount));\n  };\n\n  useEffect(() => {\n    if (response === \"Transaction done Successfully\") {\n      // sessionStorage.setItem(\"customer\", JSON.stringify(response));\n      //alert(\"Success: Transaction successful..!!\");\n      toast.success(\"Transaction successful..!!\", { autoClose: 2000 });\n      clearForm();\n      //<Redirect to=\"/custhome\" />;\n    } else if (response != \"Transaction done Successfully\") {\n      //alert(response.error);\n      toast.error(response, {\n        autoClose: 3000,\n      });\n    } //else if (error) {\n    //   //alert(error);\n    //   toast.error(\"Transaction Fail\", {\n    //     autoClose: 1500,\n    //   });\n    // }\n  }, [loading, error, response]);\n\n  return (\n    <div>\n      <Container className=\"text-white\">\n        <Card className={\"border border-white bg-white text-dark\"}>\n          <Card.Header>Fund Transfer</Card.Header>\n          <Card.Body>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Your Account Number</label>\n              <input\n                onChange={(e) => {\n                  setSenderAccountNo(e.target.value);\n                }}\n                className=\"form-control\"\n                value={cust.savingsAccount.accountNumber}\n                readOnly\n              />\n            </div>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Beneficiary Account Number</label>\n              <input\n                onChange={(e) => {\n                  setReciverAccountNo(e.target.value);\n                }}\n                className=\"form-control\"\n                value={reciverAccountNo}\n                placeholder=\"0\"\n              />\n            </div>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Amount </label>\n              <input\n                onChange={(e) => {\n                  setAmount(e.target.value);\n                }}\n                className=\"form-control\"\n                value={amount}\n                placeholder=\"0\"\n              />\n            </div>\n            <div className=\"mb-3\">\n              <button\n                onClick={onTransfer}\n                className=\"btn btn-success float-right\"\n              >\n                Transfer\n              </button>\n            </div>\n          </Card.Body>\n        </Card>\n      </Container>\n    </div>\n  );\n};\n\nexport default CustomerFundTransfer;\n"]},"metadata":{},"sourceType":"module"}