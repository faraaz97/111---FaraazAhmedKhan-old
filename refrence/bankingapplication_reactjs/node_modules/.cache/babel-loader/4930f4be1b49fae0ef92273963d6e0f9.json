{"ast":null,"code":"var _jsxFileName = \"D:\\\\new26\\\\ReactUI\\\\bankingapplication_reactjs\\\\src\\\\screens\\\\admin\\\\addCustomer.js\",\n    _s = $RefreshSig$();\n\nimport \"@material-ui/icons\";\nimport React, { useState, useEffect } from \"react\";\nimport { Card, Form, Col, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addCust } from \"../../actions/adminActions/adminActions.js\";\nimport { Redirect } from \"react-router-dom\"; // import React from \"react\";\n\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddCustomer = props => {\n  _s();\n\n  const [accountNumber, setAccountNumber] = useState(\"\");\n  const [accountBalance, setAccountBalance] = useState(\"\");\n  const [cifNo, setCIFNo] = useState(\"\");\n  const [branchName, setBranchName] = useState(\"\");\n  const [ifscCode, setIfscCode] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [mobileNo, setMobileNo] = useState(\"\");\n  const dispatch = useDispatch();\n  const adminAddCust = useSelector(store => store.adminAddCust);\n  const {\n    loading,\n    error,\n    response\n  } = adminAddCust;\n  toast.configure();\n\n  const clearForm = () => {\n    setAccountNumber(\"\");\n    setAccountBalance(\"\");\n    setCIFNo(\"\");\n    setBranchName(\"\");\n    setIfscCode(\"\");\n    setFirstName(\"\");\n    setLastName(\"\");\n    setEmail(\"\");\n    setMobileNo(\"\");\n  };\n\n  const onaddCust = () => {\n    dispatch(addCust(accountNumber, accountBalance, cifNo, branchName, ifscCode, firstName, lastName, email, mobileNo));\n  };\n\n  useEffect(() => {\n    if (response && response === \"Successfully Added..!\") {\n      toast.success(\"Customer added successfully..!!    Please provide information to customer for Registration.\", {\n        autoClose: 10000\n      });\n      clearForm();\n\n      /*#__PURE__*/\n      _jsxDEV(Redirect, {\n        to: \"/adminhome\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this);\n    } else if (response && response.status === \"error\") {\n      toast.error(response.error, {\n        autoClose: 10000\n      });\n    } else if (error) {\n      // alert(\n      //   \"Error: Already have a customer with this data!!! please confirm details with customer\"\n      // );\n      toast.error(\"Already have a customer with this data!!!\", {\n        autoClose: 3000\n      });\n    }\n  }, [loading, error, response]);\n  useEffect(() => {}, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"border border-dark bg-dark text-white\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: \"Add New Customer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Account Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => {\n                setAccountNumber(e.target.value);\n              },\n              type: \"text\",\n              maxLength: \"10\",\n              value: accountNumber,\n              placeholder: \"please enter numbers only\",\n              className: \"form-control bg-dark text-white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => {\n                setFirstName(e.target.value);\n              },\n              type: \"text\",\n              maxLength: \"20\",\n              value: firstName,\n              placeholder: \"please enter First Name only\",\n              className: \"form-control bg-dark text-white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Account Balance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => {\n                setAccountBalance(e.target.value);\n              },\n              type: \"text\",\n              maxLength: \"20\",\n              value: accountBalance,\n              placeholder: \"please enter amount in number\",\n              className: \"form-control bg-dark text-white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => {\n                setLastName(e.target.value);\n              },\n              type: \"text\",\n              maxLength: \"20\",\n              value: lastName,\n              placeholder: \"please enter Last Name only\",\n              className: \"form-control bg-dark text-white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"CIF Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => {\n                setCIFNo(e.target.value);\n              },\n              type: \"text\",\n              maxLength: \"11\",\n              value: cifNo,\n              placeholder: \"please enter 11 digit number\",\n              className: \"form-control bg-dark text-white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"E-mail\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => {\n                setEmail(e.target.value);\n              },\n              type: \"email\",\n              value: email,\n              placeholder: \"please enter Primary mail id: example@org.com\",\n              className: \"form-control bg-dark text-white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Branch Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => {\n                setBranchName(e.target.value);\n              },\n              type: \"text\",\n              maxLength: \"20\",\n              value: branchName,\n              placeholder: \"please enter branch name\",\n              className: \"form-control bg-dark text-white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Mobile Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => {\n                setMobileNo(e.target.value);\n              },\n              type: \"text\",\n              maxLength: \"10\",\n              value: mobileNo,\n              placeholder: \"please enter Primary mobile number\",\n              className: \"form-control bg-dark text-white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"IFSC Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => {\n                setIfscCode(e.target.value);\n              },\n              type: \"text\",\n              maxLength: \"11\",\n              value: ifscCode,\n              placeholder: \"please enter 11 character only\",\n              className: \"form-control bg-dark text-white\" //className={'bg-dark text-white'}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n        style: {\n          textAlign: \"right\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"reset\",\n          onClick: onaddCust,\n          size: \"md\",\n          className: \"btn btn-success\",\n          children: \"ADD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), adminAddCust.loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"waiting for response\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddCustomer, \"ZJdvYTKfIsjL6XXXFhevd75Pd44=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = AddCustomer;\nexport default AddCustomer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCustomer\");","map":{"version":3,"sources":["D:/new26/ReactUI/bankingapplication_reactjs/src/screens/admin/addCustomer.js"],"names":["React","useState","useEffect","Card","Form","Col","Button","useDispatch","useSelector","addCust","Redirect","toast","AddCustomer","props","accountNumber","setAccountNumber","accountBalance","setAccountBalance","cifNo","setCIFNo","branchName","setBranchName","ifscCode","setIfscCode","firstName","setFirstName","lastName","setLastName","email","setEmail","mobileNo","setMobileNo","dispatch","adminAddCust","store","loading","error","response","configure","clearForm","onaddCust","success","autoClose","status","e","target","value","textAlign"],"mappings":"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","sourcesContent":["import {} from \"@material-ui/icons\";\nimport React, { useState, useEffect } from \"react\";\nimport { Card, Form, Col, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addCust } from \"../../actions/adminActions/adminActions.js\";\nimport { Redirect } from \"react-router-dom\";\n// import React from \"react\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst AddCustomer = (props) => {\n  const [accountNumber, setAccountNumber] = useState(\"\");\n  const [accountBalance, setAccountBalance] = useState(\"\");\n  const [cifNo, setCIFNo] = useState(\"\");\n  const [branchName, setBranchName] = useState(\"\");\n  const [ifscCode, setIfscCode] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [mobileNo, setMobileNo] = useState(\"\");\n\n  const dispatch = useDispatch();\n  const adminAddCust = useSelector((store) => store.adminAddCust);\n  const { loading, error, response } = adminAddCust;\n  toast.configure();\n\n  const clearForm = () => {\n    setAccountNumber(\"\");\n    setAccountBalance(\"\");\n    setCIFNo(\"\");\n    setBranchName(\"\");\n    setIfscCode(\"\");\n    setFirstName(\"\");\n    setLastName(\"\");\n    setEmail(\"\");\n    setMobileNo(\"\");\n  };\n\n \n\n  const onaddCust = () => {\n    \n    dispatch(\n      addCust(\n        accountNumber,\n        accountBalance,\n        cifNo,\n        branchName,\n        ifscCode,\n        firstName,\n        lastName,\n        email,\n        mobileNo\n      )\n    );\n  };\n  \n  useEffect(() => {\n    if (response && response === \"Successfully Added..!\") {\n      \n      toast.success(\n        \"Customer added successfully..!!    Please provide information to customer for Registration.\",\n        { autoClose: 10000 }\n      );\n      clearForm();\n      <Redirect to=\"/adminhome\" />;\n    } else if (response && response.status === \"error\") {\n     \n      toast.error(response.error, {\n        autoClose: 10000,\n      });\n    } else if (error) {\n      // alert(\n      //   \"Error: Already have a customer with this data!!! please confirm details with customer\"\n      // );\n      toast.error(\"Already have a customer with this data!!!\", {\n        autoClose: 3000,\n      });\n    }\n  }, [loading, error, response]);\n\n  useEffect(() => {}, []);\n\n  return (\n    <div>\n      <Card className={\"border border-dark bg-dark text-white\"}>\n        <Card.Header>Add New Customer</Card.Header>\n        <Card.Body>\n          <Form.Row>\n            <Form.Group as={Col}>\n              <label className=\"form-label\">Account Number</label>\n              <input\n                onChange={(e) => {\n                  setAccountNumber(e.target.value);\n                }}\n                type=\"text\"\n                maxLength=\"10\"\n                value={accountNumber}\n                placeholder=\"please enter numbers only\"\n                className=\"form-control bg-dark text-white\"\n              />\n            </Form.Group>\n\n            <Form.Group as={Col}>\n              <label className=\"form-label\">First Name</label>\n              <input\n                onChange={(e) => {\n                  setFirstName(e.target.value);\n                }}\n                type=\"text\"\n                maxLength=\"20\"\n                value={firstName}\n                placeholder=\"please enter First Name only\"\n                className=\"form-control bg-dark text-white\"\n              />\n            </Form.Group>\n          </Form.Row>\n          <Form.Row>\n            <Form.Group as={Col}>\n              <label className=\"form-label\">Account Balance</label>\n              <input\n                onChange={(e) => {\n                  setAccountBalance(e.target.value);\n                }}\n                type=\"text\"\n                maxLength=\"20\"\n                value={accountBalance}\n                placeholder=\"please enter amount in number\"\n                className=\"form-control bg-dark text-white\"\n              />\n            </Form.Group>\n\n            <Form.Group as={Col}>\n              <label className=\"form-label\">Last Name</label>\n              <input\n                onChange={(e) => {\n                  setLastName(e.target.value);\n                }}\n                type=\"text\"\n                maxLength=\"20\"\n                value={lastName}\n                placeholder=\"please enter Last Name only\"\n                className=\"form-control bg-dark text-white\"\n              />\n            </Form.Group>\n          </Form.Row>\n          <Form.Row>\n            <Form.Group as={Col}>\n              <label className=\"form-label\">CIF Number</label>\n              <input\n                onChange={(e) => {\n                  setCIFNo(e.target.value);\n                }}\n                type=\"text\"\n                maxLength=\"11\"\n                value={cifNo}\n                placeholder=\"please enter 11 digit number\"\n                className=\"form-control bg-dark text-white\"\n              />\n            </Form.Group>\n\n            <Form.Group as={Col}>\n              <label className=\"form-label\">E-mail</label>\n              <input\n                onChange={(e) => {\n                  setEmail(e.target.value);\n                }}\n                type=\"email\"\n                value={email}\n                placeholder=\"please enter Primary mail id: example@org.com\"\n                className=\"form-control bg-dark text-white\"\n              />\n            </Form.Group>\n          </Form.Row>\n          <Form.Row>\n            <Form.Group as={Col}>\n              <label className=\"form-label\">Branch Name</label>\n              <input\n                onChange={(e) => {\n                  setBranchName(e.target.value);\n                }}\n                type=\"text\"\n                maxLength=\"20\"\n                value={branchName}\n                placeholder=\"please enter branch name\"\n                className=\"form-control bg-dark text-white\"\n              />\n            </Form.Group>\n\n            <Form.Group as={Col}>\n              <label className=\"form-label\">Mobile Number</label>\n              <input\n                onChange={(e) => {\n                  setMobileNo(e.target.value);\n                }}\n                type=\"text\"\n                maxLength=\"10\"\n                value={mobileNo}\n                placeholder=\"please enter Primary mobile number\"\n                className=\"form-control bg-dark text-white\"\n              />\n            </Form.Group>\n          </Form.Row>\n\n          <Form.Row>\n            <Form.Group as={Col}>\n              <label className=\"form-label\">IFSC Code</label>\n              <input\n                onChange={(e) => {\n                  setIfscCode(e.target.value);\n                }}\n                type=\"text\"\n                maxLength=\"11\"\n                value={ifscCode}\n                placeholder=\"please enter 11 character only\"\n                className=\"form-control bg-dark text-white\"\n                //className={'bg-dark text-white'}\n              />\n            </Form.Group>\n          </Form.Row>\n        </Card.Body>\n        <Card.Footer style={{ textAlign: \"right\" }}>\n          <Button\n            type=\"reset\"\n            onClick={onaddCust}\n            size=\"md\"\n            className=\"btn btn-success\"\n          >\n            ADD\n          </Button>\n        </Card.Footer>\n\n        {adminAddCust.loading && <div>waiting for response</div>}\n      </Card>\n    </div>\n  );\n};\n\nexport default AddCustomer;\n"]},"metadata":{},"sourceType":"module"}